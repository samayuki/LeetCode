#1
class Solution {
public:
    int totalNQueens(int n) {
        int result=0;
        vector<int> x(n,0);
        queen(n,0,x,result);
        return result;
    }
    void queen(int n,int line,vector<int> &x,int &result)
    {
        int flag;
        if(line==n)
        {
            result++;
            return;
        }
        for(int i=0;i<n;i++)
        {
            flag = 1;
            for(int j=0;j<line;j++)
                if(x[j]==i||abs(x[j]-i)==abs(j-line))
                {flag=0;break;}
            if(flag)
            {
                x[line] = i;
                queen(n,line+1,x,result);
            }
        }
    }
};

#2
class Solution {
public:
    int queen[100];//存每行的皇后位置，由1到N  
    int totalNQueens(int n) {
        int count = 0;
        int loc=1;  
        while(loc>=1){  
            queen[loc]++;  
            if(queen[loc]==n+1)//回溯  
                loc--;  
            else if(check(loc)){  
                if(loc==n){  
                    count++;  
                    loc--;  
                }  
                else{  
                    loc++;  
                    queen[loc]=0;  
                }  
            }  
        }  
        return count;  
    }
    int check(int loc)//判断是否能满足条件  
    {  
        for(int i=1;i<loc;i++){  
            if(queen[i]==queen[loc]||(int)fabs(queen[loc]-queen[i])==loc-i)  
                return 0;  
        }  
        return 1;  
    } 
};
